{"version":3,"sources":["components/layout/Navbar.js","components/cases/CaseSummary.js","components/quarantunes/Quarantunes.js","components/quarantales/Quarantales.js","components/todo/TaskList.js","components/bookList/BookList.js","components/layout/Dashboard.js","components/layout/About.js","components/layout/Guide.js","components/layout/Clock.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","class","CaseSummary","props","useState","items","setItems","useEffect","a","axios","result","data","fetchData","cases","deaths","recovered","todayCases","Quarantunes","src","width","height","allowtransparency","allow","title","Quarantales","TaskList","componentDidMount","getTasks","onChange","event","setState","target","name","value","onSubmit","e","preventDefault","tasklist","JSON","parse","localStorage","getItem","task","state","status","push","setItem","stringify","updateTask","index","undoTask","deleteTask","splice","sort","b","map","item","taskComplete","textDecoration","key","style","href","onClick","this","type","fluid","placeholder","Component","BookList","Dashboard","About","Guide","Clock","React","Date","time","setTime","setInterval","toLocaleTimeString","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35112abb.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink} from 'react-router-dom';\nimport './navbar.css';\n\nconst Navbar = ()=>{\n    return(\n      \n    <nav>\n      <div className=\"nav-wrapper abc\">\n        \n        <NavLink to ='/' className=\"brand-logo center\">QUARANTIMES</NavLink>\n        <ul className=\"left\">\n          <li><NavLink to ='/guide'><span class=\"material-icons\">library_books</span></NavLink></li>\n        </ul>\n        <ul className=\"right\">\n          <li><NavLink to ='/about'><span class=\"material-icons\">group_work</span></NavLink></li>\n        </ul>\n      </div>\n    </nav>\n    \n    )\n}\n\nexport default Navbar;","import React, {useEffect, useState} from 'react';\nimport './CaseSummary.css';\nimport axios from 'axios';\n\nconst CaseSummary = (props)=>{\n\n    const [items, setItems] = useState([])\n\n    useEffect(()=>{\n        async function fetchData(){\n            const result = await axios('https://corona.lmao.ninja/v2/countries/India');\n            setItems(result.data);\n        }\n        fetchData();\n    },[])\n\n    return(\n            <div className=\"card \">\n                <div className=\"card-title center white-text\">COVID-19</div>\n                <div className=\"card-content\">\n                    <p className = \"white-text\">TOTAL CONFIRMED</p><p className = \"blue-text\"> {items.cases}</p><br/>\n                    <p className = \"white-text\">DEATHS</p><p className = \"red-text\"> {items.deaths}</p><br/>\n                    <p className = \"white-text\">RECOVERED</p><p className = \"yellow-text\"> {items.recovered}</p><br/>\n                    <p className = \"white-text\">TODAY</p><p className = \"grey-text\"> {items.todayCases}</p><br/>\n                </div>\n            </div>\n    );\n}\n\nexport default CaseSummary;","import React from 'react'\nimport './Quarantunes.css'\n\n\nconst Quarantunes = ()=>{\n    return(\n        <div>\n        <iframe src=\"https://open.spotify.com/embed/playlist/4rEgp5s9VCLek3rz6zkAU6\" width=\"100%\" height=\"380px\"  allowtransparency=\"true\" allow=\"encrypted-media\" className=\"con\" title=\"quarantunes\"></iframe>\n        </div>\n    )\n}\n\nexport default Quarantunes\n\n// https://open.spotify.com/playlist/7rfAjTfBzpYIsZhrCGoXan","import React from 'react'\n\n\nconst Quarantales = ()=>{\n    return(\n        <div className=\"card\">\n            <div className=\"card-title white-text center\">QUARANTALES</div>\n            <div className=\"card-content white-text\">\n            </div>\n        </div>\n    )\n}\n\nexport default Quarantales\n\n// https://open.spotify.com/playlist/7rfAjTfBzpYIsZhrCGoXan","import React, {Component} from 'react'\nimport \"./TaskList.css\";\n\nclass TaskList extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={\n            task:\"\",\n            tasklist:[]\n        }\n\n    }\n\n    //on load get the task list\n    componentDidMount=()=>{\n        this.getTasks();\n    }\n\n    onChange = event=>{\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n    }\n\n    //add task to list\n    onSubmit=(e)=>{\n        e.preventDefault()\n        //get the task list from\n        let tasklist=JSON.parse(localStorage.getItem(\"tasklist\"))\n\n        //task list is null\n        if(tasklist==null){\n            tasklist=[]\n        }\n\n        //create task\n        let task={\n            task: `${this.state.task}`,\n            status:false\n        }\n\n        //add the task to the task list\n        tasklist.push(task)\n\n        //save the task list in the local storage\n        localStorage.setItem(\"tasklist\",JSON.stringify(tasklist))\n\n        //clear the form\n        this.setState({task:\"\"});\n        \n        //refresh the tasks\n        this.getTasks();\n    }\n\n    \n    updateTask=index=>{\n        let tasklist=JSON.parse(localStorage.getItem(\"tasklist\"));\n        tasklist[index].status = true;\n        // save the updated task list\n        localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n        // refresh the task list\n        this.getTasks();\n    }\n\n    undoTask = index => {\n        // get the task list from the local storage\n        let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"));\n        // change status to false\n        tasklist[index].status = false;\n        // save the updated task list\n        localStorage.setItem(\"tasklist\", JSON.stringify(tasklist));\n        // refresh the task list\n        this.getTasks();\n      };\n\n      deleteTask=index=>{\n          let tasklist = JSON.parse(localStorage.getItem(\"tasklist\"))\n          tasklist.splice(index, 1)\n          localStorage.setItem(\"tasklist\",JSON.stringify(tasklist))\n          this.getTasks()\n      }\n\n      getTasks=()=>{\n        //get the task list from the local storage\n\n        let tasklist= JSON.parse(localStorage.getItem(\"tasklist\"))\n\n        //check if the task list is empty\n        if(tasklist){\n            //sort all the tasks on the basis of status\n            //completetd task will move down\n\n            tasklist=tasklist.sort((a,b)=>{\n                if(a.status){\n                    return 1;\n                }\n                else if(b.status){\n                    return -1;\n                }\n                return 0;\n            })\n\n            //save task list\n            localStorage.setItem(\"tasklist\",JSON.stringify(tasklist))\n\n            //set the tasklist to the state\n            this.setState({\n                // default color\n                // Incomplete: yellow\n                // complete: green\n                tasklist: tasklist.map((item, index) => {\n                    let taskComplete = { textDecoration: \"none\" };\n  \n                    if (item.status) {\n                        taskComplete[\"textDecoration\"] = \"line-through\";\n                    }\n                    return (\n                    <div className=\"card abcd\" key={index} style={taskComplete}>\n                            <div className=\"\">\n                            <span class=\"intext\">{item.task}</span>\n                            <a href=\"#!\" class=\"small material-icons secondary-content\" onClick={() => this.deleteTask(index)}>delete</a>\n                            <a href=\"#!\" class=\"small material-icons secondary-content\" onClick={() => this.undoTask(index)}>remove_circle_outline</a>\n                            <a href=\"#!\" class=\"small material-icons secondary-content\" onClick={() => this.updateTask(index)}>check_circle_outline</a>\n                            </div>\n                    </div>\n                    );\n                })\n            })\n        }\n    }\n\n\n      render() {\n        return (\n          <div className=\"card collection\">\n            <h5 className=\"white-text center\">📝 Todos</h5>\n            \n            <form onSubmit={this.onSubmit} className=\"white-text\">\n                <input\n                  type=\"text\"\n                  name=\"task\"\n                  onChange={this.onChange}\n                  value={this.state.task}\n                  fluid\n                  placeholder=\"ex. Buy milk...\"\n                  className=\"white-text\"\n                />\n            </form>\n              <div>{this.state.tasklist}</div>\n            \n          </div>\n        );\n      }\n\n}\n\nexport default TaskList;\n","import React from 'react'\nimport './bookList.css'\n\nconst BookList=()=>{\n    return(\n        <div class = \"collection white-text\">\n            <h4 class =\"center\">Reading List</h4>\n        <ul class=\"collection \">\n            <li class=\"collection-item avatar black\">\n            <i class=\"material-icons circle red\">insert_chart</i>\n                <span class=\"title\">Title</span>\n                <p>First Line <br/>\n                Second Line\n                </p>\n                <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">grade</i></a>\n            </li>\n    <li class=\"collection-item avatar black\">\n      <i class=\"material-icons circle\">folder</i>\n      <span class=\"title\">Title</span>\n      <p>First Line <br/>\n         Second Line\n      </p>\n      <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">grade</i></a>\n    </li>\n    <li class=\"collection-item avatar  black\">\n      <i class=\"material-icons circle green\">insert_chart</i>\n      <span class=\"title\">Title</span>\n      <p>First Line <br/>\n         Second Line\n      </p>\n      <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">grade</i></a>\n    </li>\n    <li class=\"collection-item avatar  black\">\n      <i class=\"material-icons circle red\">play_arrow</i>\n      <span class=\"title\">Title</span>\n      <p>First Line <br/>\n         Second Line\n      </p>\n      <a href=\"#!\" class=\"secondary-content \"><i class=\"material-icons\">grade</i></a>\n    </li>\n  </ul>\n        </div>\n    )\n}\n\nexport default BookList;\n","import React from 'react';\nimport CaseSummary from '../cases/CaseSummary'\nimport Quarantunes from '../quarantunes/Quarantunes'\nimport Quarantales from '../quarantales/Quarantales'\nimport TaskList from '../todo/TaskList'\nimport BookList from '../bookList/BookList'\n\n\nfunction Dashboard() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col s12 m12 l3\">\n            <CaseSummary/>\n        </div>\n        <div className=\"col s12 m12 l6 center\">\n            <Quarantunes/>\n        </div>\n        <div className=\"col s12 m12 l3\">\n        <TaskList/>\n        </div>\n      </div>\n      <BookList/>\n      <div className=\"\">\n        <Quarantales/>\n      </div>\n      </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react'\n\nconst About = ()=>{\n    return(\n        <div class=\"container\">\n            <p class=\"flow-text white-text center\">Isolate The Isolation</p>\n\n            <p className=\"flow-text white-text\">Stats\n            <div class=\"divider\"></div>\n            </p>\n            <p class=\"flow-text white-text center card\">Latest Covid-19 stats to keep you updated.</p>\n            \n            <p className=\"flow-text white-text\">Music\n            <div class=\"divider\"></div>\n            </p>\n            <p class=\"flow-text white-text center card\">Handpicked spotify playlist to pass the time.</p>\n\n            <p className=\"flow-text white-text\">Todos\n            <div class=\"divider\"></div>\n            </p>\n            <p class=\"flow-text white-text center card\">Personalized Todo List to keep track of your day.</p>\n            \n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nconst Guide = ()=>{\n    return(\n        <div class=\"container center\">\n          <h4 class=\"white-text center\">Safe Guide</h4>\n          \n\n          <div class=\"divider\"></div>\n\n          <div class=\"section card-panel card\">\n            <p class=\"flow-text white-text\">Wash your hands. Maintain Social Distancing. Wash your hands. Maintain Social Distancing .Wash your hands. Maintain Social Distancing </p>\n          </div>\n\n          <div class=\"divider\"></div>\n          \n          <div class=\"section card-panel card \">\n            <p class=\"flow-text white-text\">Wash your hands. Maintain Social Distancing </p>\n          </div>\n          <div class=\"divider\"></div>\n\n          <div class=\"section card-panel card\">\n            <p class=\"flow-text white-text\">Wash your hands. Maintain Social Distancing </p>\n          </div>\n\n        </div>\n    )\n}\n\nexport default Guide\n","import React from 'react';\n\nconst Clock=()=>{\n    const [time,setTime]=React.useState(new Date());\n\n    React.useEffect(()=>{\n        setInterval(()=>tick(),1000)\n    })\n    function tick(){\n        setTime(new Date());\n    }\n    return(\n        <div class=\"center card\">\n            <span class =\"white-text\">{time.toLocaleTimeString()}</span>\n        </div>\n    )\n}\n\nexport default Clock;","import React from 'react';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/layout/Dashboard'\nimport About from './components/layout/About'\nimport Guide from './components/layout/Guide'\nimport {BrowserRouter , Route,Switch} from 'react-router-dom'\nimport Clock from './components/layout/Clock'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar/>\n      <Clock/>\n      <Switch>\n      <Route path=\"/\" exact component={Dashboard}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/guide\" component={Guide}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}